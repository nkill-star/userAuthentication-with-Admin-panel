<link rel="stylesheet" href="/styles/admindash.css">
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    
</head>
<body>

    <!-- Navbar -->
    <nav class="navbar">
        <h1>Admin Dashboard</h1>
        <a href="/admin/logout">
            <button class="logout-btn btn btn-danger">Logout</button>
        </a>
    </nav>

    <!-- Main Dashboard Section -->
    <main class="dashboard-container">
        <h2>Users Management</h2>
        <div class="table-controls">
            <button onclick="openAddUserModal()">Add User</button>
            <input type="text" id="searchInput" placeholder="Search by email" onkeyup="searchUsers()">
        </div>
        <table class="user-table">
            <thead>
                <tr>
                    <th>No</th>
                    <th>Email</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                {{#each users}}
                <tr>
                    <td>{{@index}}</td>
                    <td>{{this.email}}</td>
                    <td>
                        <button class="btn btn-success" onclick="openEditUserModal('{{this._id}}', '{{this.email}}')">Edit</button>
                        <button class="delete-btn btn btn-danger" onclick="deleteUser('{{this._id}}')">Delete</button>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </main>

    <!-- Add User Modal -->
    <div id="addUserModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeAddUserModal()">&times;</span>
            <h2>Add User</h2>
            <form action="/admin/adduser" method="POST" id="addUserForm">
                <label for="email">Email:</label>
                <input type="text" name="email" id="addUserEmail" required>
                <label for="password">Password:</label>
                <input type="password" name="password" id="addUserPassword" required>
                <button type="submit">Save</button>
                <button type="button" onclick="closeAddUserModal()">Cancel</button>
            </form>
        </div>
    </div>

    <!-- Edit User Modal -->
    <div id="editUserModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeEditUserModal()">&times;</span>
            <h2>Edit User</h2>
            <form action="/admin/edituser" method="POST" id="editUserForm">
                <input type="hidden" name="id" id="editUserId">
                <label for="email">Email:</label>
                <input type="text" name="email" id="editUserEmail" required>
                <label for="password">New Password:</label>
                <input type="password" name="password" id="editUserPassword">
                <button type="submit">Save</button>
                <button type="button" onclick="closeEditUserModal()">Cancel</button>
            </form>
        </div>
    </div>

    <script>
        // Function to open the Add User modal
        function openAddUserModal() {
            document.getElementById("addUserModal").style.display = "block";
        }

        // Function to close the Add User modal
        function closeAddUserModal() {
            document.getElementById("addUserModal").style.display = "none";
        }

        // Function to open the Edit User modal
        function openEditUserModal(id, email) {
            document.getElementById("editUserModal").style.display = "block";
            document.getElementById("editUserId").value = id;
            document.getElementById("editUserEmail").value = email;
        }

        // Function to close the Edit User modal
        function closeEditUserModal() {
            document.getElementById("editUserModal").style.display = "none";
        }

        // Function to delete a user
        function deleteUser(userid) {
           // if (confirm("Are you sure you want to delete this user?")) {
               // window.location.href = `/admin/deleteuser/${userid}`;
           // }

                Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
                }).then((result) => {
                if (result.isConfirmed) {
                    // Show the "Deleted" success message first
                    Swal.fire({
                    title: "Deleted!",
                    text: "Your file has been deleted.",
                    icon: "success",
                    timer: 1500, // Auto-close the success message after 1.5 seconds
                    showConfirmButton: false
                    });

                    // Delay the redirect by 1.5 seconds to allow time for the success message to be displayed
                    setTimeout(() => {
                    window.location.href = `/admin/deleteuser/${userid}`;
                    }, 1500);  // Wait for the 1.5 second timer before redirecting
                }
                });
                
                

        }

        // Function to validate email format
        function validateEmail(email) {
            const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return emailPattern.test(email);
        }

        // Function to validate password strength
        function validatePassword(password) {
            const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%?&])[A-Za-z\d@$!%?&]{8,}$/;
            return passwordPattern.test(password);
        }

        // Handle Add User form submission
        document.getElementById("addUserForm").addEventListener("submit", function (event) {
            event.preventDefault();

            const email = document.getElementById("addUserEmail").value;
            const password = document.getElementById("addUserPassword").value;

            if (!validateEmail(email)) {
                Swal.fire({
                //icon: "success",
                title: 'Invalid Email Address',
                showConfirmButton: false,
                timer: 1500
                });
                return;
            }

            if (!validatePassword(password)) {
                Swal.fire("Password must be at least 8 characters long and contain a mix of letters, numbers, and special characters");
                return;
            }

            this.submit();
        });

        // Handle Edit User form submission
        document.getElementById("editUserForm").addEventListener("submit", function (event) {
            event.preventDefault();

            const email = document.getElementById("editUserEmail").value;
            const password = document.getElementById("editUserPassword").value;

            if (!validateEmail(email)) {
                Swal.fire({
                //icon: "success",
                title: 'Invalid Email Address',
                showConfirmButton: false,
                timer: 1500
                });
                return;
            }

            if (password && !validatePassword(password)) {
                Swal.fire("Password must be at least 8 characters long and contain a mix of letters, numbers, and special characters");
                return;
            }

            this.submit();
        });

        // Search function for the user table
        function searchUsers() {
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("searchInput");
            filter = input.value.toUpperCase();
            table = document.getElementsByClassName("user-table")[0];
            tr = table.getElementsByTagName("tr");

            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[1]; // Email column
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }
    </script>
</body>
</html>
